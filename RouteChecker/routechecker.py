#!/opt/homebrew/bin/python3

# Import the necessary libraries
import ipaddress
import re
import os

route_counter = 0

def non_network():
        print('\n\n----------------------------------------------------')
        print('  NON-NETWORK ADDRESSES DETECTED! TRY AGAIN!')
        print('  ' + i + ' is a not a valid network address')
        print('----------------------------------------------------\n')

def compare_nets(this_net):
        for j in route_nets:
                if this_net.subnet_of(j):
                        increment()
                        print(' ', route_counter, (' '* (3-len(str(route_counter)))),'CORE ROUTE:', str(j),(' '* (18-len(str(j)))),'contains rXg Network:', str(this_net))

def increment():
        global route_counter
        route_counter = route_counter+1

route_nets_list = [
'10.83.0.0/22',
'10.83.0.0/20',
'10.83.8.0/21',
'10.83.16.0/21',
'10.83.24.0/22',
'10.83.28.0/25',
'10.83.30.0/25',
'10.83.32.0/22',
'10.83.36.0/25',
'10.83.38.0/25',
'10.83.40.0/21',
'10.83.48.0/22',
'10.83.52.0/25',
'10.83.54.0/25',
'10.83.56.0/21',
'10.83.64.0/22',
'10.83.68.0/25',
'10.83.70.0/25',
'10.83.72.0/21',
'10.83.80.0/22',
'10.83.84.0/25',
'10.83.86.0/25',
'10.83.88.0/21',
'10.83.96.0/22',
'10.83.100.0/24',
'10.83.101.0/24',
'10.83.104.0/21',
'10.83.112.0/22',
'10.83.116.0/24',
'10.83.117.0/24',
'10.83.118.0/24',
'10.83.119.0/24',
'10.83.120.0/21',
'10.83.128.0/22',
'10.83.133.0/24',
'10.83.134.0/24',
'10.83.136.0/21',
'10.83.144.0/22',
'10.83.148.0/25',
'10.83.150.0/25',
'10.83.152.0/21',
'10.83.160.0/22',
'10.83.164.0/28',
'10.83.164.128/25',
'10.83.165.0/24',
'10.83.166.0/25',
'10.83.168.0/21',
'10.83.176.0/22',
'10.83.184.0/21',
'10.83.192.0/22',
'10.83.196.0/22',
'10.83.200.0/21',
'10.83.208.0/22',
'10.83.216.0/21',
'10.83.224.0/22',
'10.83.232.0/21',
'10.83.240.0/22',
'10.83.248.0/21',
'10.84.0.0/22',
'10.84.4.0/25',
'10.84.6.0/24',
'10.84.7.0/25',
'10.84.8.0/22',
'10.84.14.0/25',
'10.84.16.0/22',
'10.84.24.0/21',
'10.84.32.0/22',
'10.84.40.0/21',
'10.84.48.0/22',
'10.84.56.0/21',
'10.84.64.0/20',
'10.84.80.0/21',
'10.84.88.0/21',
'10.84.96.0/22',
'10.84.104.0/21',
'10.84.112.0/22',
'10.84.116.0/22',
'10.84.120.0/21',
'10.84.128.0/22',
'10.84.136.0/21',
'10.84.144.0/22',
'10.84.149.0/24',
'10.84.152.0/21',
'10.84.160.0/22',
'10.84.168.0/21',
'10.84.176.0/22',
'10.84.183.0/24',
'10.84.184.0/21',
'10.84.192.0/22',
'10.84.197.0/24',
'10.84.200.0/21',
'10.84.208.0/22',
'10.84.212.0/25',
'10.84.216.0/21',
'10.84.224.0/22',
'10.84.232.0/21',
'10.84.240.0/22',
'10.84.248.0/21',
'10.85.0.0/22',
'10.85.8.0/21',
'10.85.16.0/21',
'10.85.24.0/21',
'10.85.32.0/22',
'10.85.36.0/22',
'10.85.40.0/21',
'10.85.48.0/20',
'10.85.64.0/22',
'10.85.72.0/21',
'10.85.80.0/22',
'10.85.88.0/21',
'10.85.96.0/22',
'10.85.100.0/24',
'10.85.104.0/21',
'10.85.112.0/21',
'10.85.120.0/21',
'10.85.128.0/22',
'10.85.134.0/24',
'10.85.136.0/21',
'10.85.144.0/22',
'10.85.152.0/21',
'10.85.160.0/22',
'10.85.168.0/21',
'10.85.176.0/22',
'10.85.184.0/21',
'10.85.192.0/21',
'10.85.200.0/21',
'10.85.208.0/22',
'10.85.212.0/24',
'10.85.216.0/21',
'10.85.224.0/22',
'10.85.232.0/21',
'10.85.240.0/20',
'10.86.0.0/22',
'10.86.8.0/21',
'10.86.16.0/22',
'10.86.24.0/21',
'10.86.32.0/20',
'10.86.48.0/22',
'10.86.56.0/21',
'10.86.64.0/22',
'10.86.72.0/21',
'10.86.80.0/22',
'10.86.88.0/21',
'10.86.96.0/22',
'10.86.104.0/21',
'10.86.112.0/22',
'10.86.120.0/21',
'10.86.128.0/22',
'10.86.132.0/22',
'10.86.136.0/21',
'10.86.144.0/20',
'10.86.160.0/20',
'10.86.176.0/20',
'10.86.192.0/25',
'10.86.194.0/25',
'10.86.200.0/21',
'10.86.208.0/21',
'10.86.248.0/21',
'10.253.83.0/24',
]

rg_nets_list= [
 "10.86.7.0/24",
 "10.86.20.0/24",
 "10.86.21.0/24",
 "10.86.22.0/24",
 "10.86.23.0/24",
 "10.86.52.0/24",
 "10.86.53.0/24",
 "10.86.54.0/24",
 "10.86.55.0/24",
 "10.84.245.0/24",
 "10.84.246.0/24",
 "10.84.247.0/24",
 ]

route_nets = []

rg_nets = [] 

try:
	for i in route_nets_list:
		net = ipaddress.ip_network(i)
		route_nets.append(net)
	#break
except ValueError as ve:
		non_network()

try:
	for i in rg_nets_list:
		net = ipaddress.ip_network(i)
		rg_nets.append(net)
	#break
except ValueError as ve:
		non_network() 

print("\n|=================================================================================|")
print("                      Welcome to Route Checker v1.0!")
print("|=================================================================================|\n")

for i in rg_nets:
        compare_nets(i)

print('')
print("|=================================================================================|")
print("                                    Copyright TheWiFiNinja 2023")
print("|=================================================================================|\n\n")
